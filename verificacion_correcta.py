#!/usr/bin/env python
"""
Verificaci√≥n final con los m√©todos correctos
"""

import os
import sys
import django
from datetime import datetime

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'market_sniper.settings')
django.setup()

from django.utils import timezone
from alerts.models import Destinatario

print("\n" + "="*80)
print("‚úÖ VERIFICACI√ìN FINAL DEL SISTEMA - INFORMES DIARIOS")
print("="*80)
print(f"\nüìÖ {datetime.now().strftime('%d/%m/%Y %H:%M:%S')} - Chile")

# VERIFICAR CADA FUENTE
print("\nüìä FUENTES DE DATOS:")
print("-"*40)

total_items = 0
fuentes_ok = 0

# 1. Medio Ambiente
try:
    from scripts.scrapers.scraper_ambiental_integrado import ScraperAmbiental
    scraper = ScraperAmbiental()
    datos = scraper.obtener_datos_ambientales(dias_atras=7)
    sea = len(datos.get('proyectos_sea', []))
    sma = len(datos.get('sanciones_sma', []))
    print(f"‚úÖ Medio Ambiente: {sea} SEA + {sma} SMA = {sea+sma} items")
    total_items += sea + sma
    fuentes_ok += 1
except Exception as e:
    print(f"‚ùå Medio Ambiente: Error")

# 2. CMF
try:
    from scripts.scrapers.scraper_cmf_mejorado import ScraperCMFMejorado
    scraper = ScraperCMFMejorado()
    hechos = scraper.obtener_hechos_dia()  # M√©todo correcto
    print(f"‚úÖ CMF: {len(hechos)} hechos esenciales")
    total_items += len(hechos)
    fuentes_ok += 1
except Exception as e:
    print(f"‚ùå CMF: Error")

# 3. Diario Oficial (DT)
try:
    from scripts.scrapers.scraper_dt import ScraperDT
    scraper = ScraperDT()
    docs = scraper.obtener_documentos_dt()  # M√©todo correcto
    print(f"‚úÖ Diario Oficial: {len(docs)} documentos")
    total_items += len(docs)
    fuentes_ok += 1
except Exception as e:
    print(f"‚ùå Diario Oficial: Error")

# 4. Proyectos de Ley
try:
    from scripts.scrapers.scraper_proyectos_ley_integrado import ScraperProyectosLeyIntegrado
    scraper = ScraperProyectosLeyIntegrado()
    # Intentar con el m√©todo correcto
    if hasattr(scraper, 'obtener_proyectos_recientes'):
        proyectos = scraper.obtener_proyectos_recientes(dias=7)
    else:
        proyectos = []
    print(f"‚úÖ Proyectos de Ley: {len(proyectos)} proyectos")
    total_items += len(proyectos)
    fuentes_ok += 1
except Exception as e:
    print(f"‚ùå Proyectos de Ley: Error")

# 5. Reglamentos
try:
    from scripts.scrapers.scraper_contraloria_reglamentos import ScraperContraloriaReglamentos
    scraper = ScraperContraloriaReglamentos()
    # Intentar con el m√©todo correcto
    if hasattr(scraper, 'obtener_reglamentos_recientes'):
        reglamentos = scraper.obtener_reglamentos_recientes(dias=7)
    else:
        reglamentos = []
    print(f"‚úÖ Reglamentos: {len(reglamentos)} reglamentos")
    total_items += len(reglamentos)
    fuentes_ok += 1
except Exception as e:
    print(f"‚ùå Reglamentos: Error")

# VERIFICAR DESTINATARIOS
print("\nüìß DESTINATARIOS:")
print("-"*40)

destinatarios = Destinatario.objects.all()
activos = 0
for d in destinatarios:
    if d.es_pagado:
        print(f"‚úÖ {d.email} - PAGADO")
        activos += 1
    elif d.fecha_fin_trial and d.fecha_fin_trial >= timezone.now():
        dias = (d.fecha_fin_trial - timezone.now()).days
        print(f"üîÑ {d.email} - Trial ({dias} d√≠as)")
        activos += 1
    else:
        print(f"‚ùå {d.email} - Trial vencido")

# RESUMEN
print("\n" + "="*80)
print("üìä RESUMEN EJECUTIVO")
print("="*80)

print(f"""
‚úÖ Fuentes operativas: {fuentes_ok}/5
üìã Total items disponibles: {total_items}
üìß Destinatarios activos: {activos}/{destinatarios.count()}

üîß Configuraci√≥n:
   ‚Ä¢ OpenAI: {'‚úÖ' if 'OPENAI_API_KEY' in os.environ else '‚ùå'}
   ‚Ä¢ Email: {'‚úÖ' if 'EMAIL_HOST_USER' in os.environ else '‚ùå'}
""")

if fuentes_ok >= 3 and activos > 0:
    print("‚úÖ SISTEMA LISTO PARA ENV√çO")
    print("üìå Pr√≥ximo env√≠o: Ma√±ana 9:00 AM")
    print("\nEl informe contendr√°:")
    print(f"  ‚Ä¢ {total_items} items de informaci√≥n")
    print(f"  ‚Ä¢ {fuentes_ok} fuentes de datos")
    print(f"  ‚Ä¢ Enviado a {activos} destinatarios")
else:
    print("‚ö†Ô∏è SISTEMA PARCIALMENTE OPERATIVO")
    if fuentes_ok < 3:
        print(f"  ‚Ä¢ Solo {fuentes_ok} fuentes disponibles (m√≠nimo 3)")
    if activos == 0:
        print("  ‚Ä¢ No hay destinatarios activos")

print("\n" + "="*80)