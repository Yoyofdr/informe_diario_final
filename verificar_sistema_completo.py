#!/usr/bin/env python3
"""
Script de verificaci√≥n completa del sistema para el env√≠o de informes
"""

import os
import sys
import django
from pathlib import Path
from datetime import datetime
import pytz

# Cargar variables de entorno
from dotenv import load_dotenv
load_dotenv()

# Configurar Django
BASE_DIR = Path(__file__).resolve().parent
sys.path.insert(0, str(BASE_DIR))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'market_sniper.settings')
django.setup()

print("=" * 60)
print("VERIFICACI√ìN COMPLETA DEL SISTEMA DE INFORMES")
print("=" * 60)

# 1. Verificar hora actual
chile_tz = pytz.timezone('America/Santiago')
hora_chile = datetime.now(chile_tz)
print(f"\n‚úÖ Hora actual en Chile: {hora_chile.strftime('%Y-%m-%d %H:%M:%S %Z')}")

# 2. Verificar comando de Django
from django.core.management import get_commands
commands = get_commands()
if 'enviar_informes_diarios' in commands:
    print("‚úÖ Comando 'enviar_informes_diarios' disponible")
else:
    print("‚ùå ERROR: Comando 'enviar_informes_diarios' NO encontrado")

# 3. Verificar base de datos
from alerts.models import Destinatario, Organizacion
total_org = Organizacion.objects.count()
total_dest = Destinatario.objects.count()
print(f"\nüìä Base de datos:")
print(f"  - Organizaciones: {total_org}")
print(f"  - Destinatarios: {total_dest}")

# 4. Verificar variables de entorno cr√≠ticas
env_vars = {
    'OPENAI_API_KEY': os.environ.get('OPENAI_API_KEY'),
    'HOSTINGER_EMAIL': os.environ.get('HOSTINGER_EMAIL'),
    'HOSTINGER_EMAIL_PASSWORD': os.environ.get('HOSTINGER_EMAIL_PASSWORD'),
}

print("\nüîë Variables de entorno:")
for var, value in env_vars.items():
    if value:
        print(f"  ‚úÖ {var}: Configurada")
    else:
        print(f"  ‚ùå {var}: NO configurada")

# 5. Verificar archivos cr√≠ticos
archivos_criticos = [
    'scripts/generators/generar_informe_oficial_integrado_mejorado.py',
    'alerts/cmf_resumenes_ai.py',
    'alerts/services/pdf_extractor.py',
    'alerts/scraper_diario_oficial.py',
    'scripts/scrapers/scraper_cmf_mejorado.py',
    'alerts/management/commands/enviar_informes_diarios.py'
]

print("\nüìÅ Archivos cr√≠ticos:")
for archivo in archivos_criticos:
    path = BASE_DIR / archivo
    if path.exists():
        print(f"  ‚úÖ {archivo}")
    else:
        print(f"  ‚ùå {archivo} - NO EXISTE")

# 6. Verificar importaciones cr√≠ticas
print("\nüì¶ Dependencias cr√≠ticas:")
try:
    import requests
    print("  ‚úÖ requests")
except ImportError:
    print("  ‚ùå requests")

try:
    import PyPDF2
    print("  ‚úÖ PyPDF2")
except ImportError:
    print("  ‚ùå PyPDF2")

try:
    import openai
    print("  ‚úÖ openai")
except ImportError:
    print("  ‚ùå openai")

try:
    from selenium import webdriver
    print("  ‚úÖ selenium")
except ImportError:
    print("  ‚ùå selenium")

# 7. Verificar que se puede importar el generador
print("\nüîß M√≥dulo generador de informes:")
try:
    from scripts.generators import generar_informe_oficial_integrado_mejorado
    print("  ‚úÖ M√≥dulo importable")
    
    # Verificar que tiene la funci√≥n principal
    if hasattr(generar_informe_oficial_integrado_mejorado, 'generar_informe_oficial'):
        print("  ‚úÖ Funci√≥n generar_informe_oficial disponible")
    else:
        print("  ‚ùå Funci√≥n generar_informe_oficial NO disponible")
except Exception as e:
    print(f"  ‚ùå Error al importar: {e}")

# 8. Resumen final
print("\n" + "=" * 60)
print("RESUMEN DE VERIFICACI√ìN")
print("=" * 60)

verificaciones = {
    "Hora Chile": True,
    "Comando Django": 'enviar_informes_diarios' in commands,
    "Base de datos": total_dest > 0,
    "API Keys": all([env_vars.get('OPENAI_API_KEY'), env_vars.get('HOSTINGER_EMAIL')]),
    "Archivos": all([(BASE_DIR / archivo).exists() for archivo in archivos_criticos]),
}

todas_ok = all(verificaciones.values())

for nombre, estado in verificaciones.items():
    simbolo = "‚úÖ" if estado else "‚ùå"
    print(f"{simbolo} {nombre}: {'OK' if estado else 'FALLO'}")

print("\n" + "=" * 60)
if todas_ok:
    print("‚úÖ SISTEMA LISTO PARA ENV√çO DE INFORMES")
    print("El pr√≥ximo env√≠o ser√° ma√±ana a las 9:00 AM hora Chile")
else:
    print("‚ö†Ô∏è HAY PROBLEMAS QUE NECESITAN ATENCI√ìN")
print("=" * 60)